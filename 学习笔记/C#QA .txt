1.CLR定义，组成部分？
2.程序集定义，组成部分？
3.编译本机代码流程？
4.托管代码和非托管代码区别？
5.什么是Ngen？
6.CLI、CTS、CLS？


1.格式字符串和字符串插值的用法
2.格式字段有哪些？货币/对齐/千位分隔符/百分比/科学计数法


1.预定义类型和用户定义类型
2.堆、栈存储数据的特征
3.值类型/引用类型存储数据的区别
4.dynamic关键字


1.类的基本概念，数据成员/函数成员
2.访问修饰符，默认级别？


1.var关键字？
2.const关键字？
3.局部函数
4.形参和实参？
5.值参数/引用参数基本概念？
值参数：
	(在栈中为形参分配空间)将实参的值复制给形参；
	(引用类型复制的引用；值类型复制的数据，产生了一个新的数据项)
引用参数：
	方法的声明和调用必须使用ref修饰符
	实参必须是变量，且作为实参前必须赋值
	不会在栈上为形参分配内存；
	形参的参数名将作为实参变量的别名，指向相同的内存位置；
引用类型作为值参数/引用参数传递 - ref的用法
6.输出参数out用法
7.参数数组params
8.ref别名和ref返回
9.命名参数
10.栈帧概念
局部变量和参数位于栈上
在调用方法时，内存从栈的顶部开始分配，保存和方法关联的一些数据项
=> 这块内存叫做方法的栈帧
栈帧保存以下内容：
	返回地址 - 方法退出时继续执行的位置
	分配内存的参数 - 方法的值参数，可能是参数数组
	和方法调用相关的其他管理数据项
方法调用时，整个栈帧会压入栈
方法退出时，整个栈帧会从栈上弹出 - 有时被叫做"栈展开"
11.递归，实现阶乘

++++++++++++++++++++++++++++++++++

1.实例成员
2.常量和索引器不能声明为static
3.属性定义，只读/只写属性
4.表达式函数体
5.只声明属性而不声明后备字段，由编译器创建隐藏的后备字段
6.实例构造函数/默认构造函数
7.静态构造函数
8.析构函数
执行在类的实例被销毁之前需要的清理或释放非托管资源的行为
9.readonly修饰符
10.this
11.索引器
12.访问器的访问修饰符
13.分布类
14.分布方法


1.屏蔽基类成员-new
2.基类访问表达式
3.将派生类引用转换为基类，基类引用无法访问派生类成员
4.virtual和override
5.继承链中构造函数的执行
6.构造函数初始化语句
7.类默认访问修饰符
8.抽象成员
9.抽象类
10.密封类
11.静态类 - 隐式密封，不能继承静态类
12.拓展方法


1.@忽略转义
2.&位与，|位或，^位异或，~位非
3.用户自定义类型转换
4.运算符重载
5.nameof


1.switch...case...when
2.标签语句和goto
3.using语句


1.结构与类的区别
2.结构的构造函数


1.枚举
2.Flag特性
3.GetName和GteNames方法

+++++++++++++++++++++++++++++++++++++

1.一维数组的声明实例化
2.矩形数组的声明实例化（二维，三维）
3.交错数组的声明实例化
4.Clone方法
5.数组协变
6.数组ref返回示例


1.委托的声明、赋值、调用；
2.委托组合和移除
3.调用委托时的返回值
4.匿名方法 - params参数
5.Lambda表达式 - 无参数情况下写法


1.事件的声明调用；
2.EventHandler
3.EventArgs传参用法


1.接口的声明、实现和调用
2.显示接口实现和访问
3.类继承了"继承了接口的接口"


1.隐式转换和显示转换
2.checked/unchecked检测overflowexception
3.隐式/显示引用类型转换
4.装箱/拆箱
5.用户自定义转换：显示/隐式/显示
6.is和as类型兼容判断区别


1.泛型约束类型(5种)
2.泛型拓展方法
3.泛型接口
4.泛型委托 -  协变/逆变

+++++++++++++++++++++++++++++++++++++

1.可枚举类型和枚举器定义
2.IEnumerator接口(3个函数成员)
3.IEnumerable接口
4.泛型枚举接口
5.迭代器，yield return和yield break
6.枚举器类-状态机
7.使用迭代器创建枚举器/可枚举类型
8.迭代器作为属性


1.匿名类型
2.Linq-查询表达式
  from子句
  join子句
  from...let...where子句
  group子句
  into子句
3.Linq-方法语法
  SelectMany
  TakeWhile
  SkipWhile
  Reverse
  Distinct
  Union
  Intersect
  AsEnumerable
4.Linq to XML API
  创建/保存/显示文件
  增加节点
  xml属性
  xml结合linq简单查询
 
1.进程和线程定义及相关关系
2.Stopwatch类
3.await表达式
  作用
  await task - task?
4.异步方法特点
5.async关键字
6.异步返回类型(5种)
7.Task.Run(4种委托类型)
8.取消异步操作
  CancellationToken
  CancellationTokenSource
9.等待任务
  wait/waitAll/waitAny
  Task.Delay
10.Task.Yield
11.Parallel.For/Parallel.Foreacj
12.BeginInvoke/EndInvoke
13.异步方法调用模式
   wait-until-done
   polling
   callback
14.AsyncResult
15.计时器


1.mscorlib库
2.命名空间嵌套(2种)
3.using指令
  命名空间指令
  别名指令
  using static指令
4.程序集释义
5.程序集结构(4)
6.程序集-多模块
7.程序集标识符
8.强命名/弱命名程序集
9.强命名程序集创建/strongname工具
10.私有程序集的部署
11.共享程序集和GAC
12.配置文件
13.延迟签名

+++++++++++++++++++++++++++++++++++++

1.异常类及异常的相关只读属性
  Message
  StackTrace
  InnerException
  Source
2.Catch子句(4个重载)
3.finally块
  finally块代码执行逻辑
  try中调用其他方法，异常弹出模式
4.抛出异常


1.预处理指令定义及基本语法
2.#define和#undef
3.条件编译
  #if
  #else
  #elif
  #endif
4.诊断指令
  #warning Message
  #error Message
5.行号指令(4)
  改变由编译器警告和错误消息报的出现行数
  改变被编译源文件的文件名
  对交互调试器隐藏一些行
  重新保存实际的行号和文件名
6.区域指令
  #region
  #endregion
7.#pragma warning指令


1.元数据和反射定义
2.Type类
3.Type类部分成员
  Name
  NameSpace
  Assembly
  GetFields
  GetProperties
  GetMethods
4.获取Type对象
  GetType()和typeof运算符，区别
5.特性-了解
6.特性-部分
  Obsolete
  Conditional
  调用者信息特性
  DebuggerStepThrough
  Serializable
  NonSerialized  
  AttributeUsage
7.多特性声明方式
8.特性-显示目标说明符
9.全局特性
10.自定义特性
11.isDefined用法
12.GetCustomAttribute用法


C#6.0和7.0新增及其他零碎
(本书只涉及到7.0，C#语法迭代很快，自行学习)
1.字符串插值
2.表达式函数体
3.空条件运算符
4.catch和finally中使用await
5.异常过滤器
6.String的一些常用方法
  Contact/Join/Split
7.StringBuilder类使用
8.Parse/TryParse
9.可空类型属性 - HasValue
10.空接合运算符
11.空条件运算符(联想委托invoke调用)
12.嵌套类
